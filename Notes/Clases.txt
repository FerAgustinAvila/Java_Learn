CLASE ABSTRACTA vs CLASE INTERFAZ

Las clases abstractas y en general la herencia agrupa clases que tiene una relación de parentesco, es decir son de la misma jerarquía familiar: Avioneta es un tipo de Avión, el Hombre es un tipo de Mamifero, Chocolate es tipo de Comida, Cuadrado es una Figura Geometrica... etc.

En la clase Abstracta se refiere a que los métodos se declaran o escriben anteponiendo la palabra clave abstract, pero no tiene programación interna, es decir los métodos van sin código, sin implementación (no van las llaves típicas de los métodos), solo la firma del método:

    public abstract class DocumentoAbstracto {
        abstract public void imprimir();
        abstract public void firmar();
    }
    
Ahí tenemos dos métodos abstractos que están sin implementar, es decir sin cuerpo de programación, las llaves no van, y finalizan en (;).

Y nos sirven para proponer un diseño en común a las clase hijas que hereden de esa clase abstracta, en el ejemplo dice que todos los tipos de documentos ya sean facturas, boletas, ordenes de compra, vale vista, cheques, etc, en todas ellas tienen que implementar en su propia forma y manera los métodos imprimir() y firmar() y de hecho al heredar de la clase abstracta, las hijas están obligadas por un "contrato de implementacion" a implementar esos métodos.

Otro ejemplo típico es FiguraGeometrica, una clase abstracta, ya que representa un concepto de figuras que pueden ser triangulos, circulos o cuadrados, pero todas ellas tienen algo en común, todas se les puede calcular el perímetro y área, todas se pueden dibujar en pantalla (ya sea en 2d o 3d), entonces la clase abstracta sería:

    public abstract class FiguraGeometrica{
        abstract public double area();
        abstract public double perimetro();
        abstract public double dibujar();
    }

Al igual que en el ejemplo anterior, no tiene sentido dar forma, cuerpo e implementación de los métodos en la clase abstracta, porque como es genérica dependerá de cuál figura estamos hablando, ¿es posible clacular el área a la FiguraGeometrica? No, dependerá de cuál, a un cuadrado o triangulo tiene más sentido ya que en todas ellas se calcula de forma diferente.

Las interfaces, por lo contario, agrupan clases que HACEN LO MISMO y no tiene nada que ver con la relación de parentesco, por lo tanto no se fuerzan a una relación familiar.

Supongamos objetos que vuelan, por lo tanto para cumplir con el trabajo o "contrato" Volar deben implementar la interface Volar e implementar el comportamiento que les permitan despegar y volar por el aire, ejemplo una Avion vuela, pero una gaviota también vuela, lo mismo un murcielago y un helicoptero, te fijas, son objeto que entre si NO son familiares, no tienen nada que ver unos con otros en término de parentesco, lo único que los une es que todos ellos pueden volar, cada uno de diferente formas, por lo tanto entra en juego el "Polimorfismo Puro" diferentes formas de implementar un mismo comportamiento en diferentes tipos objetos.

Tanto las herencias como las interfaces sirven para poder aplicar el polimorfismo.

Las interfaces son un "contrato de implementación" (o firmas), en el código se traduce a métodos sin implementar (sólo se declaran), luego la(s) clase(s) que implementa una determinada interface debe implementar esos métodos que se declaran en la interfaz, entran en cuento cuando existe una clase que ofrece un "servicio" y otra que lo "consume".